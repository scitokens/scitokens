# ---------------------------
#
# Prepare distributions of this project
# for various platforms
#
# ---------------------------

name: Packaging

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  tarball:
    name: Tarball

    runs-on: ubuntu-latest

    steps:
      - name: Get source code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install build requirements
        run: python -m pip install build

      - name: Create distributions
        run: python -m build . --sdist --wheel --outdir .

      - uses: actions/upload-artifact@v4
        with:
          name: tarball
          path: scitokens-*.tar.*
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: scitokens*.whl
          if-no-files-found: error

  # -- RHEL -----------------

  rhel-source:
    name: ${{ matrix.name }} ${{ matrix.version }} source package
    needs:
      - tarball
    strategy:
      fail-fast: false
      matrix:
        include:
          - dist: rockylinux
            name: Rocky Linux
            version: 8
            container: rockylinux:8
          - dist: rockylinux
            name: Rocky Linux
            version: 9
            container: rockylinux:9
          - dist: fedora
            name: Fedora
            version: latest
            container: fedora:latest
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      TARBALL: "scitokens-*.tar.*"
    steps:
      - name: Download tarball
        uses: actions/download-artifact@v4
        with:
          name: tarball

      - name: Configure EPEL
        if: matrix.dist != 'fedora'
        run: dnf -y install epel-release

      - name: Configure rpmbuild
        run: |
          dnf -y install \
              "*-srpm-macros" \
              rpm-build \
          ;

      - name: Create source package
        run: rpmbuild -ts --define "_srcrpmdir $(pwd)" ${TARBALL}

      - name: Source package info
        run: "rpm -qp *.src.rpm --info"

      - uses: actions/upload-artifact@v4
        with:
          name: srpm-${{ matrix.dist }}-${{ matrix.version }}
          path: "*.src.rpm"
          if-no-files-found: error

  rhel-binary:
    name: ${{ matrix.name }} ${{ matrix.version }} binary package
    needs:
      - rhel-source
    strategy:
      fail-fast: false
      matrix:
        include:
          - dist: rockylinux
            name: Rocky Linux
            version: 8
            container: rockylinux:8
          - dist: rockylinux
            name: Rocky Linux
            version: 9
            container: rockylinux:9
          - dist: fedora
            name: Fedora
            version: latest
            container: fedora:latest
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      SRPM: "python-scitokens-*.src.rpm"
    steps:
      - name: Download SRPM
        uses: actions/download-artifact@v4
        with:
          name: srpm-${{ matrix.dist }}-${{ matrix.version }}

      - name: Configure CRB for EL9
        if: matrix.version == 9
        run: |
          dnf -y install "dnf-command(config-manager)"
          dnf config-manager --set-enabled crb

      - name: Configure EPEL
        if: matrix.dist != 'fedora'
        run: dnf -y install epel-release

      - name: Install build tools (dnf)
        run: |
          dnf -y -q install \
              rpm-build \
              "dnf-command(builddep)" \
          ;

      - name: Install build dependencies (dnf)
        run: dnf builddep -y ${SRPM}

      - name: Build binary packages
        run: |
          rpmbuild --rebuild --define "_rpmdir $(pwd)" ${SRPM}
          rm -f ${SRPM}
          mv */*.rpm .

      - name: Print package info
        run: |
          # print contents of packages
          for rpmf in *.rpm; do
              echo "===== ${rpmf}"
              rpm -qp "${rpmf}" --info
              echo "Files:"
              rpm -qp "${rpmf}" --list
              echo "Provides:"
              rpm -qp "${rpmf}" --provides
              echo "Requires:"
              rpm -qp "${rpmf}" --requires
          done

      - uses: actions/upload-artifact@v4
        with:
          name: rpm-${{ matrix.dist }}-${{ matrix.version }}
          path: "*.rpm"
          if-no-files-found: error

  rhel-install:
    name: ${{ matrix.name }} ${{ matrix.version }} install test
    needs:
      - rhel-binary
    strategy:
      fail-fast: false
      matrix:
        include:
          - dist: rockylinux
            name: Rocky Linux
            version: 8
            container: rockylinux:8
          - dist: rockylinux
            name: Rocky Linux
            version: 9
            container: rockylinux:9
          - dist: fedora
            name: Fedora
            version: latest
            container: fedora:latest
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    steps:
      - name: Download RPMs
        uses: actions/download-artifact@v4
        with:
          name: rpm-${{ matrix.dist }}-${{ matrix.version }}

      - name: Configure EPEL
        if: matrix.dist != 'fedora'
        run: dnf -y install epel-release

      - name: Install RPMs
        run: dnf -y install *.rpm

  lint-rhel:
    name: Lint RPMs
    runs-on: ubuntu-latest
    container: rockylinux:9
    needs:
      - rhel-binary
    steps:
      - name: Download RPM
        uses: actions/download-artifact@v4
        with:
          name: rpm-rockylinux-9

      - name: Install rpmlint
        run: |
          dnf -y -q install \
              rpmlint \
          ;

      - name: Lint
        run: rpmlint --info *.rpm
